## Hides both code & output in knitted document
library(tidyverse)
library(patchwork)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)  ## Globally suppress all code, messages, & warnings
summary(resid_fitted)
## Hides both code & output in knitted document
library(tidyverse)
library(patchwork)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)  ## Globally suppress all code, messages, & warnings
## load diamonds dataset
diamonds <- read_csv("./dataset/original_diamonds_dataset.csv")
## list.files("./dataset")
## getwd()
## Data Cleaning: Remove predictor variables we don't need: 1st col, cut, depth, y, z
diamonds_cleaned <- diamonds %>% select(-...1, -cut, -depth, -y, -z)
## head(diamonds_cleaned)
write_csv(diamonds_cleaned, "./dataset/diamonds_cleaned.csv")
## Preliminary (MLR) Model
fit <- lm(price ~ carat + color + clarity + table + x, data=diamonds_cleaned)
## 1(a) Residual vs Fitted | NOTE: Best plot among the 3 to check for these 2 assumptions
## BASE R
## base_r_resid_fitted <- plot(fit, which = 1)  # Residuals vs Fitted
resid_fit <- data.frame(Fitted = fitted(fit), Residuals = resid(fit))
resid_fitted <- ggplot(data=resid_fit, aes(x=Fitted, y=Residuals)) +
geom_point(alpha=0.4) +  ## Transparency level to help w/ overlapping pts
geom_smooth(method = "loess", se = FALSE, color = "pink") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
labs(x="Fitted Values", y="Residuals",
title="Residuals vs Fitted Values")
summary(resid_fitted)
summary(fit)
summary(fit)
## BASE R
## sresidual_values <- rstandard(fit)
## base_r_sresid_hist <- hist(sresidual_values, xlab="Standardized Residuals",
## main="Standardized Residuals Histogram")
std_resid <- rstandard(fit)
sresid_hist <- ggplot(data=data.frame(std_resid), aes(x=std_resid)) +
geom_histogram(bins=15, fill="lightblue", color="black") +
labs(title="Histogram of Standardized Residuals",
x="Standardized Residuals", y="Frequency")
## Data Cleaning: Remove predictor variables we don't need: 1st col, cut, depth, y, z
diamonds_cleaned <- diamonds %>% select(-...1, -cut, -depth, -y, -z)
## head(diamonds_cleaned)
write_csv(diamonds_cleaned, "./dataset/diamonds_cleaned.csv")
summary(diamonds_cleaned)
