## Hides both code & output in knitted document
library(tidyverse)
library(patchwork)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)  ## Globally suppress all code, messages, & warnings
summary(resid_fitted)
## Hides both code & output in knitted document
library(tidyverse)
library(patchwork)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)  ## Globally suppress all code, messages, & warnings
## load diamonds dataset
diamonds <- read_csv("./dataset/original_diamonds_dataset.csv")
## list.files("./dataset")
## getwd()
## Data Cleaning: Remove predictor variables we don't need: 1st col, cut, depth, y, z
diamonds_cleaned <- diamonds %>% select(-...1, -cut, -depth, -y, -z)
## head(diamonds_cleaned)
write_csv(diamonds_cleaned, "./dataset/diamonds_cleaned.csv")
## Preliminary (MLR) Model
fit <- lm(price ~ carat + color + clarity + table + x, data=diamonds_cleaned)
## 1(a) Residual vs Fitted | NOTE: Best plot among the 3 to check for these 2 assumptions
## BASE R
## base_r_resid_fitted <- plot(fit, which = 1)  # Residuals vs Fitted
resid_fit <- data.frame(Fitted = fitted(fit), Residuals = resid(fit))
resid_fitted <- ggplot(data=resid_fit, aes(x=Fitted, y=Residuals)) +
geom_point(alpha=0.4) +  ## Transparency level to help w/ overlapping pts
geom_smooth(method = "loess", se = FALSE, color = "pink") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
labs(x="Fitted Values", y="Residuals",
title="Residuals vs Fitted Values")
summary(resid_fitted)
summary(fit)
summary(fit)
## BASE R
## sresidual_values <- rstandard(fit)
## base_r_sresid_hist <- hist(sresidual_values, xlab="Standardized Residuals",
## main="Standardized Residuals Histogram")
std_resid <- rstandard(fit)
sresid_hist <- ggplot(data=data.frame(std_resid), aes(x=std_resid)) +
geom_histogram(bins=15, fill="lightblue", color="black") +
labs(title="Histogram of Standardized Residuals",
x="Standardized Residuals", y="Frequency")
## Data Cleaning: Remove predictor variables we don't need: 1st col, cut, depth, y, z
diamonds_cleaned <- diamonds %>% select(-...1, -cut, -depth, -y, -z)
## head(diamonds_cleaned)
write_csv(diamonds_cleaned, "./dataset/diamonds_cleaned.csv")
summary(diamonds_cleaned)
## Hides both code & output in knitted document
library(tidyverse)
library(patchwork)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)  ## Globally suppress all code, messages, & warnings
## Preliminary (MLR) Model Setup
fit <- lm(price ~ carat + color + clarity + table + x, data=diamonds_cleaned)
summary(fit)
levels(color)
## Hides both code & output in knitted document
library(tidyverse)
library(patchwork)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)  ## Globally suppress all code, messages, & warnings
## load diamonds dataset
diamonds <- read_csv("./dataset/original_diamonds_dataset.csv")
## list.files("./dataset")
## getwd()
colors(diamonds_cleaned$color)
levels(diamonds_cleaned$color)
unique(diamonds_cleaned$color)
unique(diamonds_cleaned$clarity)
## BASE R
## plot(fit, which=2)
sresid_qq <- ggplot(data=data.frame(std_resid), aes(sample=std_resid)) +
stat_qq(alpha=0.2) +
stat_qq_line(color="red", linetype="dashed") +
labs(title="Normal QQ-Plot of Standardized Residuals",
x="Theoretical Quantiles", y="Standardized Residuals")
plot(diamonds_cleaned$color, diamonds_cleaned$price)
plot(diamonds_cleaned$color, diamonds_cleaned$price)
plot(diamonds_cleaned$color, diamonds_cleaned$price)
## Data Cleaning: Remove predictor variables we don't need: 1st col, cut, depth, y, z
diamonds_cleaned <- diamonds %>% select(-...1, -cut, -depth, -y, -z)
## head(diamonds_cleaned)
write_csv(diamonds_cleaned, "./dataset/diamonds_cleaned.csv")
## summary(diamonds_cleaned)
## Hides both code & output in knitted document
library(tidyverse)
library(patchwork)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)  ## Globally suppress all code, messages, & warnings
plot(diamonds_cleaned$color, diamonds_cleaned$price)
plot(diamonds_cleaned$color, diamonds_cleaned$price)
boxplot(diamonds_cleaned$price ~diamonds_cleaned$color)
boxplot(diamonds_cleaned$price ~diamonds_cleaned$clarity)
boxplot(diamonds_cleaned$price ~diamonds_cleaned$color)
plot(diamonds_cleaned$price[colorE], diamonds_cleaned$color==D)
plot(diamonds_cleaned$price[diamonds_cleaned$color=="D"])
diamonds_cleaned$price[diamonds_cleaned$color=="D"]
plot(diamonds_cleaned$price[diamonds_cleaned$color=="D"])
plot(diamonds_cleaned$price[diamonds_cleaned$color=="E"])
plot(diamonds_cleaned$price[diamonds_cleaned$color=="J"])
boxplot(diamonds_cleaned$price ~diamonds_cleaned$color)
## diamonds_cleaned$price[diamonds_cleaned$color=="D"]  ## Price when color == D
summary(diamonds_cleaned$price[diamonds_cleaned$color=="D"])
summary(diamonds_cleaned$price[diamonds_cleaned$color=="E"])
boxplot(diamonds_cleaned$price ~diamonds_cleaned$color)
## Hides both code & output in knitted document
library(tidyverse)  ## For data wrangling & plotting
library(patchwork)
library(knitr)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)  ## Globally suppress all code, messages, & warnings
summary(fit)
summary(fit)
coef_table <- data.frame(
Term = c("(Intercept)", "carat", "colorE", "colorF", "colorG", "colorH", "colorI", "colorJ",
"clarityIF", "claritySI1", "claritySI2", "clarityVS1", "clarityVS2", "clarityVVS1", "clarityVVS2",
"table", "x"),
Estimate = c(-1388.839, 10945.695, -210.489, -286.752, -493.858, -993.809, -1474.570, -2387.941,
5665.892, 3894.266, 2926.092, 4845.059, 4528.148, 5309.983, 5234.228, -32.708, -900.270)
)
## summary(fit)
coef_table <- data.frame(
Term = c("(Intercept)", "carat", "colorE", "colorF", "colorG", "colorH", "colorI", "colorJ",
"clarityIF", "claritySI1", "claritySI2", "clarityVS1", "clarityVS2", "clarityVVS1", "clarityVVS2",
"table", "x"),
Estimate = c(-1388.839, 10945.695, -210.489, -286.752, -493.858, -993.809, -1474.570, -2387.941,
5665.892, 3894.266, 2926.092, 4845.059, 4528.148, 5309.983, 5234.228, -32.708, -900.270)
)
kable(coef_table, digits = 3, caption = "Manually Entered Coefficient Estimates")
## summary(fit)
coef_table <- data.frame(
Term = c("(Intercept)", "carat", "colorE", "colorF", "colorG", "colorH", "colorI", "colorJ",
"clarityIF", "claritySI1", "claritySI2", "clarityVS1", "clarityVS2", "clarityVVS1", "clarityVVS2",
"table", "x"),
Estimate = c(-1388.839, 10945.695, -210.489, -286.752, -493.858, -993.809, -1474.570, -2387.941,
5665.892, 3894.266, 2926.092, 4845.059, 4528.148, 5309.983, 5234.228, -32.708, -900.270)
)
kable(coef_table, digits = 3, caption = "Numerical Table of Coefficient Estimates")
summary(fit)
coef_table <- data.frame(
Term = c("(Intercept)", "carat", "colorE", "colorF", "colorG", "colorH", "colorI", "colorJ",
"clarityIF", "claritySI1", "claritySI2", "clarityVS1", "clarityVS2", "clarityVVS1", "clarityVVS2",
"table", "x"),
Estimate = c(-1388.839, 10945.695, -210.489, -286.752, -493.858, -993.809, -1474.570, -2387.941,
5665.892, 3894.266, 2926.092, 4845.059, 4528.148, 5309.983, 5234.228, -32.708, -900.270)
)
kable(coef_table, digits = 3, caption = "Numerical Summary of Coefficient Estimates")
summary(fit)
coef_table <- data.frame(
Term = c("(Intercept)", "carat", "colorE", "colorF", "colorG", "colorH", "colorI", "colorJ",
"clarityIF", "claritySI1", "claritySI2", "clarityVS1", "clarityVS2", "clarityVVS1", "clarityVVS2",
"table", "x"),
Estimate = c(-1388.839, 10945.695, -210.489, -286.752, -493.858, -993.809, -1474.570, -2387.941,
5665.892, 3894.266, 2926.092, 4845.059, 4528.148, 5309.983, 5234.228, -32.708, -900.270)
)
kable(coef_table, digits=3, caption="Numerical Summary of Coefficient Estimates")
## Boxplot helps confirm that color has a r/p with price
boxplot(diamonds_cleaned$price ~ diamonds_cleaned$color)
## Boxplot for a stronger argument that clarity does ___ to predict price
boxplot(diamonds_cleaned$price ~ diamonds_cleaned$clarity)
(resid_fitted | price_fitted | price_carat) /
(price_color | price_color_boxplot) / (price_clarity | price_clarity_boxplot) /
(price_table | price_x) /
(sresid_hist | sresid_qq)
(resid_fitted | price_fitted | price_carat) /
(price_color | price_color_boxplot) / (price_clarity | price_clarity_boxplot) /
(price_table | price_x) /
(sresid_hist | sresid_qq)
(resid_fitted | price_fitted | price_carat) /
(price_color | price_color_boxplot) / (price_clarity | price_clarity_boxplot) /
(price_table | price_x) /
(sresid_hist | sresid_qq)
summary(fit)
